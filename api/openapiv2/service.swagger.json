{
  "swagger": "2.0",
  "info": {
    "title": "Demo Server API",
    "description": "An API that allows uses to interact with the Demo Service",
    "version": "1.0",
    "contact": {
      "name": "Daniel Crouch",
      "url": "https://github.com/DanielSCrouch/grpc-rest-openapi",
      "email": "d_crouch@outlook.com"
    }
  },
  "tags": [
    {
      "name": "CellService"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/health": {
      "get": {
        "operationId": "CellService_Status",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ServerHealthResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CellService"
        ]
      }
    },
    "/v1/cells": {
      "post": {
        "summary": "Create a Cell.",
        "operationId": "CellService_CreateCell",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Cell"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cell",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cell"
            }
          }
        ],
        "tags": [
          "CellService"
        ]
      }
    },
    "/v1/cells/{identity.uuid}": {
      "get": {
        "summary": "Get a Cell.",
        "operationId": "CellService_GetCell",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Cell"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "identity.uuid",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[^/]+"
          }
        ],
        "tags": [
          "CellService"
        ]
      },
      "patch": {
        "summary": "Update a Cell.",
        "operationId": "CellService_UpdateCell",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Cell"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "identity.uuid",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[^/]+"
          },
          {
            "name": "cell",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cell"
            }
          },
          {
            "name": "updateMask",
            "description": "The list of fields to be updated.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "allowMissing",
            "description": "If set to true, and the Cell is not found, a new Cell will be created.\nIn this situation, `update_mask` is ignored.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "CellService"
        ]
      }
    }
  },
  "definitions": {
    "Cell": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "#/definitions/Identifier"
        },
        "status": {
          "type": "string"
        }
      },
      "description": "Cell represents a Robotic Cell."
    },
    "Identifier": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      },
      "description": "Identifier is the unique ID of the resource."
    },
    "ServerHealthResponse": {
      "type": "object",
      "properties": {
        "healthy": {
          "type": "boolean"
        },
        "currentTime": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "ServerHealthResponse provides status of server and access time."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "BasicAuth": {
      "type": "basic"
    }
  },
  "security": [
    {
      "BasicAuth": []
    }
  ]
}
